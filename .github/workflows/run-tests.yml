name: 'Run Tests from Azure DevOps Card'

on:
  workflow_dispatch:
    inputs:
      work_item_id:
        description: 'Azure DevOps work item ID'
        required: true
        type: string
      work_item_title:
        description: 'Azure DevOps work item title'
        required: false
        type: string
      branch_name:
        description: 'Branch associated with the work item'
        required: true
        type: string

jobs:
  trigger-branch-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_name }}

      - name: Display trigger information
        run: |
          echo "üéØ Work Item ID: ${{ github.event.inputs.work_item_id }}"
          echo "üìù Work Item Title: ${{ github.event.inputs.work_item_title }}"
          echo "üåø Branch: ${{ github.event.inputs.branch_name }}"
          echo "üöÄ Triggered by: Azure DevOps card movement to Testing"

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Create required directories
        working-directory: TestScriptGeneratorBOT
        run: |
          mkdir -p screenshots
          mkdir -p reports
          mkdir -p recordings
          mkdir -p download

      - name: Install dependencies
        working-directory: TestScriptGeneratorBOT
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        working-directory: TestScriptGeneratorBOT
        run: |
          playwright install chromium

      - name: Run tests from branch
        working-directory: TestScriptGeneratorBOT
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          AZURE_CONCATENATION_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_CONCATENATION_STORAGE_CONNECTION_STRING }}
          AZURE_CONCATENATION_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_CONCATENATION_STORAGE_CONTAINER_NAME }}
          AZURE_AUTOMATION_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_AUTOMATION_STORAGE_CONNECTION_STRING }}
          AZURE_AUTOMATION_MEDIA_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_AUTOMATION_MEDIA_STORAGE_CONTAINER_NAME }}
        run: |
          echo "üöÄ Running tests from branch: ${{ github.event.inputs.branch_name }}"
          echo "üéØ Triggered by Work Item: ${{ github.event.inputs.work_item_id }}"
          
          # Run Reuters Imagen framework tests from the specific branch
          pytest -v --customer demo -m smoke --browser chrome \
                 --html=reports/report_workitem_${{ github.event.inputs.work_item_id }}.html \
                 --self-contained-html
          
          echo "‚úÖ Test execution completed for Work Item ${{ github.event.inputs.work_item_id }}"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-workitem-${{ github.event.inputs.work_item_id }}-branch-${{ github.event.inputs.branch_name }}
          path: |
            TestScriptGeneratorBOT/reports/
            TestScriptGeneratorBOT/screenshots/
            TestScriptGeneratorBOT/recordings/
          retention-days: 7

      - name: Test execution summary
        if: always()
        run: |
          echo "üìä Test Execution Summary:"
          echo "Work Item: ${{ github.event.inputs.work_item_id }} - ${{ github.event.inputs.work_item_title }}"
          echo "Branch: ${{ github.event.inputs.branch_name }}"
          echo "Status: ${{ job.status }}"
          echo "Reuters Imagen Framework: demo customer configuration"
          echo "Test Markers: smoke tests executed"
          echo "Browser: chrome"
